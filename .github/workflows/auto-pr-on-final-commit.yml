name: Auto PR on Final Commit

on:
  push:
    branches-ignore:
      - main
      - staging
      - development

jobs:
  auto-create-pr:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'final commit')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract branch name and determine base branch
        id: branchinfo
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "Current branch: $BRANCH_NAME"

          if [[ "$BRANCH_NAME" == dev-* ]]; then
            BASE_BRANCH="development"
          elif [[ "$BRANCH_NAME" == staging-* ]]; then
            BASE_BRANCH="staging"
          elif [[ "$BRANCH_NAME" == main-* ]]; then
            BASE_BRANCH="main"
          else
            BASE_BRANCH="development"
          fi

          echo "branch=$BRANCH_NAME" >> "$GITHUB_OUTPUT"
          echo "base_branch=$BASE_BRANCH" >> "$GITHUB_OUTPUT"

      - name: Install GitHub CLI (fixed version)
        run: |
          curl -fsSL https://github.com/cli/cli/releases/download/v2.49.0/gh_2.49.0_linux_amd64.deb -o gh.deb
          sudo dpkg -i gh.deb
          gh --version

      - name: Ensure branch is pushed
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git status
          git add .
          git commit -m "Auto commit from workflow" || echo "No changes to commit"
          git push origin "${{ steps.branchinfo.outputs.branch }}"
      - name: Create Pull Request
        id: create_pr
        env:
          GH_TOKEN: ${{ github.token }}
          BRANCH: ${{ steps.branchinfo.outputs.branch }}
          BASE: ${{ steps.branchinfo.outputs.base_branch }}
        run: |
          echo "${GH_PAT}" | gh auth login --with-token

          echo "📌 Creating PR from '$BRANCH' to '$BASE'..."

          EXISTING=$(gh pr list --head "$BRANCH" --base "$BASE" --state open --json number --jq '.[0].number')
          if [[ -n "$EXISTING" ]]; then
            echo "⚠️ PR already exists: #$EXISTING"
            exit 0
          fi

          gh pr create \
            --title "Auto PR from $BRANCH" \
            --body "Automatically generated PR:\n- Source: \`$BRANCH\`\n- Target: \`$BASE\`\n- Triggered by \`final commit\`" \
            --base "$BASE" \
            --head "$BRANCH"

          PR_URL=$(gh pr view --json url --jq .url)
          echo "✅ PR created: $PR_URL"
          echo "pr_url=$PR_URL" >> "$GITHUB_OUTPUT"

      - name: Print PR URL
        run: |
          echo "🔗 PR: ${{ steps.create_pr.outputs.pr_url }}"
