name: Auto PR on Final Commit

on:
  push:
    branches-ignore:
      - main
      - staging
      - development

jobs:
  auto-create-pr:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'final commit')

    steps:
      # Step 1: Checkout the pushed code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Extract branch name and determine base branch
      - name: Extract branch name and determine base branch
        id: branchinfo
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "Current branch: $BRANCH_NAME"

          if [[ "$BRANCH_NAME" == dev-* ]]; then
            BASE_BRANCH="development"
          elif [[ "$BRANCH_NAME" == staging-* ]]; then
            BASE_BRANCH="staging"
          elif [[ "$BRANCH_NAME" == main-* ]]; then
            BASE_BRANCH="main"
          else
            BASE_BRANCH="development"
          fi

          echo "branch=$BRANCH_NAME" >> "$GITHUB_OUTPUT"
          echo "base_branch=$BASE_BRANCH" >> "$GITHUB_OUTPUT"

      # Step 3: Install GitHub CLI
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install gh -y

      # Step 4: Create Pull Request
      - name: Create Pull Request using GitHub CLI
        id: create_pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: ${{ steps.branchinfo.outputs.branch }}
          BASE: ${{ steps.branchinfo.outputs.base_branch }}
        run: |
          echo "üìå Creating PR from '$BRANCH' to '$BASE'..."

          # Check if PR already exists
          EXISTING=$(gh pr list --head "$BRANCH" --base "$BASE" --state open --json number --jq '.[0].number')
          if [[ -n "$EXISTING" ]]; then
            echo "‚ö†Ô∏è PR already exists: #$EXISTING"
            exit 0
          fi

          # Create PR
          PR_URL=$(gh pr create \
            --title "Auto PR from $BRANCH" \
            --body "Automatically generated PR:\n- Source: \`$BRANCH\`\n- Target: \`$BASE\`\n- Triggered by \`final commit\`" \
            --base "$BASE" \
            --head "$BRANCH" \
            --json url --jq '.url')

          echo "‚úÖ PR created: $PR_URL"

      # Step 5: Print PR URL
      - name: Print PR URL
        run: |
          echo "üîó PR: ${{ steps.create_pr.outputs.pr_url }}"
