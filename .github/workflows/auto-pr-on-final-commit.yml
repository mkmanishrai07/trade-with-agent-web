name: Auto PR on Final Commit

on:
  push:
    branches-ignore:
      - main
      - staging
      - development

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-create-pr:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'final commit')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract branch name and determine base branch
        id: branchinfo
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "Current branch: $BRANCH_NAME"

          BASE_BRANCH="development"
          if [[ "$BRANCH_NAME" == dev-* ]]; then
            BASE_BRANCH="development"
          elif [[ "$BRANCH_NAME" == staging-* ]]; then
            BASE_BRANCH="staging"
          elif [[ "$BRANCH_NAME" == main-* ]]; then
            BASE_BRANCH="main"
          else
            BASE_BRANCH="development"  # fallback
          fi

          echo "branch=$BRANCH_NAME" >> "$GITHUB_OUTPUT"
          echo "base_branch=$BASE_BRANCH" >> "$GITHUB_OUTPUT"

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh jq
          gh --version
      - name: Authenticate GitHub CLI
        run: echo "${GH_TOKEN}" | gh auth login --with-token
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: Debug Environment and Branches
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          echo "✅ Verifying GitHub CLI authentication..."
          gh auth status

          echo "🔍 Listing remote branches..."
          git remote -v
          git fetch --all
          git branch -r

      - name: Create Pull Request
        id: create_pr
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          SOURCE_BRANCH: ${{ steps.branchinfo.outputs.branch }}
          TARGET_BASE_BRANCH: ${{ steps.branchinfo.outputs.base_branch }}
        run: |
          echo "📌 Creating PR from '$SOURCE_BRANCH' to '$TARGET_BASE_BRANCH'..."

          # Check if PR already exists
          PR_LIST=$(gh pr list --head "$SOURCE_BRANCH" --base "$TARGET_BASE_BRANCH" --state open --json number 2>/dev/null)

          if echo "$PR_LIST" | jq -e '.[0]' >/dev/null 2>&1; then
            EXISTING_PR_NUMBER=$(echo "$PR_LIST" | jq -r '.[0].number')
            echo "⚠️ PR already exists: #$EXISTING_PR_NUMBER"
            echo "pr_url=https://github.com/${GITHUB_REPOSITORY}/pull/$EXISTING_PR_NUMBER" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Create PR
          PR_URL=$(gh pr create \
            --title "Auto PR: $SOURCE_BRANCH to $TARGET_BASE_BRANCH" \
            --body "### 🤖 Automated Pull Request\n\n- **Source Branch:** \`$SOURCE_BRANCH\`\n- **Target Branch:** \`$TARGET_BASE_BRANCH\`\n\nTriggered by a commit containing 'final commit'." \
            --base "$TARGET_BASE_BRANCH" \
            --head "$SOURCE_BRANCH" \
            --label "auto-pr" \
            | grep -o 'https://github.com/[^ ]*')

          echo "✅ PR created: $PR_URL"
          echo "pr_url=$PR_URL" >> "$GITHUB_OUTPUT"

      - name: Print PR URL
        if: success()
        run: |
          echo "🔗 Pull Request URL: ${{ steps.create_pr.outputs.pr_url }}"
