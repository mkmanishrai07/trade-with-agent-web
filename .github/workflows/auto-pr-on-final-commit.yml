name: Auto PR on Final Commit

on:
  push:
    branches-ignore:
      - main
      - staging
      - development

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up SSH for GitHub
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Set Git identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Extract branch name and base branch from commit message
        id: branchinfo
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          echo "🔎 Current branch: $BRANCH_NAME"
          echo "📝 Commit message: $COMMIT_MSG"

          # Extract base branch and trigger keyword from commit message
          # Expected format: checkout_module, final commit
          BASE_BRANCH=$(echo "$COMMIT_MSG" | awk -F',' '{print $1}' | xargs)
          TRIGGER_KEYWORD=$(echo "$COMMIT_MSG" | awk -F',' '{print $2}' | grep -i "final" | xargs)

          if [[ -z "$BASE_BRANCH" || -z "$TRIGGER_KEYWORD" ]]; then
            echo "ℹ️ Commit message format not recognized or missing 'final' trigger."
            echo "Expected format: base_branch_name, final commit"
            echo "Current commit message: $COMMIT_MSG"
            echo "Skipping PR creation..."
            echo "skip=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "✅ Extracted base branch: $BASE_BRANCH"
          echo "branch=$BRANCH_NAME" >> "$GITHUB_OUTPUT"
          echo "base_branch=$BASE_BRANCH" >> "$GITHUB_OUTPUT"
          echo "skip=false" >> "$GITHUB_OUTPUT"

      - name: Install GitHub CLI
        if: steps.branchinfo.outputs.skip != 'true'
        run: |
          sudo apt update
          sudo apt install -y gh jq
          gh --version

      - name: Authenticate GitHub CLI
        if: steps.branchinfo.outputs.skip != 'true'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Create Pull Request
        if: steps.branchinfo.outputs.skip != 'true'
        id: create_pr
        env:
          SOURCE_BRANCH: ${{ steps.branchinfo.outputs.branch }}
          TARGET_BASE_BRANCH: ${{ steps.branchinfo.outputs.base_branch }}
        run: |
          echo "📌 Creating PR from '$SOURCE_BRANCH' to '$TARGET_BASE_BRANCH'..."

          # Check if PR already exists
          PR_LIST=$(gh pr list --head "$SOURCE_BRANCH" --base "$TARGET_BASE_BRANCH" --state open --json number 2>/dev/null)

          if echo "$PR_LIST" | jq -e '.[0]' >/dev/null 2>&1; then
            EXISTING_PR_NUMBER=$(echo "$PR_LIST" | jq -r '.[0].number')
            echo "⚠️ PR already exists: #$EXISTING_PR_NUMBER"
            echo "pr_url=https://github.com/${GITHUB_REPOSITORY}/pull/$EXISTING_PR_NUMBER" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Create new PR
          PR_URL=$(gh pr create \
            --title "Auto PR: $SOURCE_BRANCH to $TARGET_BASE_BRANCH" \
            --body "### 🤖 Automated Pull Request\n\n- **Source Branch:** \$SOURCE_BRANCH\\n- **Target Branch:** \$TARGET_BASE_BRANCH\\n\nTriggered by a commit containing 'final commit'." \
            --base "$TARGET_BASE_BRANCH" \
            --head "$SOURCE_BRANCH" \
            | grep -o 'https://github.com/[^ ]*')

          echo "✅ PR created: $PR_URL"
          echo "pr_url=$PR_URL" >> "$GITHUB_OUTPUT"

      - name: Print PR URL
        if: success() && steps.branchinfo.outputs.skip != 'true'
        run: |
          echo "🔗 Pull Request URL: ${{ steps.create_pr.outputs.pr_url }}"
